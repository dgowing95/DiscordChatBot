apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "helm.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}    
      labels:
        {{- include "helm.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      strategy:
        type: Recreate
      hostNetwork: true
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-pv-claim
        - name: ollama-data
          persistentVolumeClaim:
            claimName: ollama-pv-claim
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-configmap

      - name: {{ .Chart.Name }}-redis
        image: "redis:8.0.1"
        command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: redis-data
            mountPath: /data        

      - name: {{ .Chart.Name }}-ollama
        image: "ollama/ollama:0.7.0"
        imagePullPolicy: IfNotPresent
        {{ if .Values.gpuLimit }}
        resources:
          limits:
            nvidia.com/gpu: {{ .Values.gpuLimit }}
        {{ end }}
        volumeMounts:
          - name: ollama-data
            mountPath: /root/.ollama


